parameters:
  container_name:
  container_key:
  plan_container_name:
  environment_name:
  tfvarFile:
  root_directory:
  deployment_service_connection_name:
  backend_service_connection_name:
  backend_resource_group:
  backend_storage_accountname:
  terraformVersion:

steps:
  - download: none

  - download: current
    artifact: $(Build.BuildId)-trivy
    displayName: Download Plan Artifact

  - task: ExtractFiles@1
    displayName: Extract Terraform Plan
    inputs:
      archiveFilePatterns: '$(Pipeline.Workspace)/$(Build.BuildId)-trivy/$(Build.BuildId).zip'
      destinationFolder: '$(System.ArtifactsDirectory)'
      cleanDestinationFolder: false

  - task: TerraformInstaller@0
    inputs:
      terraformVersion: ${{ parameters.terraformVersion }}
      
  - task: TerraformTaskV2@2
    displayName: Terraform Init
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: '$(System.ArtifactsDirectory)/${{ parameters.root_directory }}'
      backendServiceArm: ${{ parameters.backend_service_connection_name }}
      backendAzureRmResourceGroupName: ${{ parameters.backend_resource_group }}
      backendAzureRmStorageAccountName: ${{ parameters.backend_storage_accountname }}
      backendAzureRmContainerName: ${{ parameters.container_name }}
      backendAzureRmKey: ${{ parameters.container_key }}

  - task: TerraformTaskV2@2
    displayName: Terraform Apply
    inputs:
      provider: 'azurerm'
      command: 'apply'
      workingDirectory: '$(System.ArtifactsDirectory)/${{ parameters.root_directory }}'
      commandOptions: '--var-file=$(System.ArtifactsDirectory)/${{ parameters.root_directory }}/${{ parameters.tfvarFile }}'
      environmentServiceNameAzureRM: ${{ parameters.deployment_service_connection_name }}